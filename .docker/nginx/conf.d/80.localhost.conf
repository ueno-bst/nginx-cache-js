# nginx.vh.default.conf  --  docker-openresty
#
# This file is installed to:
#   `/etc/nginx/conf.d/default.conf`
#
# It tracks the `server` section of the upstream OpenResty's `nginx.conf`.
#
# This config (and any other configs in `etc/nginx/conf.d/`) is loaded by
# default by the `include` directive in `/usr/local/openresty/nginx/conf/nginx.conf`.
#
# See https://github.com/openresty/docker-openresty/blob/master/README.md#nginx-config-files
#


server {
    listen       80;
    server_name  localhost;

    #charset koi8-r;
    #access_log  /var/log/nginx/host.access.log  main;

    include /etc/nginx/include.d/*.conf;

#     js_preload_object njs_http_config /etc/nginx/config.json;
    set $njs_http_config "/etc/nginx/config.json";

#     set_by_lua_file $context /etc/nginx/lua/http/cache/init.lua;

    location / {
        root   /usr/local/openresty/nginx/html;
        index  index.html index.htm;

        # キャッシュキーを取得
        js_set $cache_key njs_http_cache.key;

        proxy_cache_bypass $njs_http_cache_bypass;
        proxy_no_cache $njs_http_cache_nocache;

        proxy_cache_key $cache_key;

        # プロキシに送信
        proxy_pass http://wordpress;

        js_header_filter njs_http_cache.header;
    }

    location ~ ^/njs(/.*)? {
        add_header Content-Type text/html;
        js_set $cache_key njs_http_cache.key;

        add_header X-Cache-Key $njs_http_cache_key;
        add_header X-Cache-Key-Raw $njs_http_cache_key_raw;
#         js_content njs_http_cache.key;

        return 200 $cache_key;
    }

    location ~ ^/purge(/.*)? {
        js_var $njs_http_cache_purge_uri $1;
        js_set $purge_key njs_http_cache.purge_key;

        proxy_cache_purge zone $purge_key;

        add_header X-A $purge_key;

        js_header_filter njs_http_cache.header;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/local/openresty/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           /usr/local/openresty/nginx/html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}
