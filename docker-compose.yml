version: "3.9"
services:
  nginx:
    build:
      context: .docker/nginx
      args:
        ENABLED_MODULES: "cachepurge ndk njs brotli"
    image: nginx-with-cachepurge:v1
    volumes:
      - "./dist:/etc/nginx/njs"
      - "./.docker/nginx/nginx.conf:/etc/nginx/nginx.conf"
      - "./.docker/nginx/conf.d:/etc/nginx/conf.d"
      - "./.docker/nginx/include.d:/etc/nginx/include.d"
      - "./config.sample.json:/etc/nginx/config.json"
    ports:
      - "${FORWARD_HTTP_PORT:-80}:80"
    depends_on:
      - wordpress
  wordpress:
    image: wordpress:6.2.2-php8.2-apache
    volumes:
      - "./.wp:/var/www/html"
    environment:
      WORPDRESS_DB_HOST: mysql
      WORDPRESS_DB_USER: "${DB_USER:-wordpress}"
      WORDPRESS_DB_PASSWORD: "${DB_PASSWORD:-wordpress}"
      WORDPRESS_DB_NAME: "${DB_NAME:-wordpress}"
      XDEBUG_MODE: "${XDEBUG_MODE:-off}"
    depends_on:
      mysql:
        condition: service_healthy
  mysql:
    image: mysql:8.0.33
    ports:
      - "${FORWARD_DB_PORT:-3306}:3306"
    volumes:
      - "./.docker/mysql/data:/var/lib/mysql"
    environment:
      MYSQL_DATABASE: "${DB_NAME:-wordpress}"
      MYSQL_USER: "${DB_USER:-wordpress}"
      MYSQL_PASSWORD: "${DB_PASSWORD:-wordpress}"
      MYSQL_ROOT_PASSWORD: root
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u$$MYSQL_USER -p$$MYSQL_PASSWORD
      interval: 2s
      timeout: 2s
      start_period: 60s
      retries: 3

